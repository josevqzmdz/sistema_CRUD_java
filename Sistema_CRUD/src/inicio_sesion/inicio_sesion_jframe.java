/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package inicio_sesion;
import usuario_pkg.*;
import java.sql.*;
import javax.swing.JOptionPane;
import usuario_menu.agregar_jframe;
import usuario_menu.menu;
/**
 *
 * @author royer
 */
public class inicio_sesion_jframe extends javax.swing.JFrame {

    /**
     * Creates new form inicio_sesion_jframe
     */
    public inicio_sesion_jframe() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        inicioSesion = new javax.swing.JButton();
        nombre_txt = new javax.swing.JTextField();
        contra_txt = new javax.swing.JTextField();
        registrarse = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("nombre");

        jLabel2.setText("contraseña");

        inicioSesion.setText("iniciar sesion");
        inicioSesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inicioSesionActionPerformed(evt);
            }
        });

        registrarse.setText("Registrarse");
        registrarse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registrarseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(inicioSesion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 109, Short.MAX_VALUE)
                        .addComponent(registrarse))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(nombre_txt, javax.swing.GroupLayout.DEFAULT_SIZE, 232, Short.MAX_VALUE)
                            .addComponent(contra_txt))))
                .addContainerGap(42, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(nombre_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(contra_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 81, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inicioSesion)
                    .addComponent(registrarse))
                .addGap(83, 83, 83))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /*
    https://www.youtube.com/watch?v=nW13FmTdkjc
    
    Driver class: The driver class for the mysql database is com.mysql.jdbc.Driver.
    Connection URL: The connection URL for the mysql database is jdbc:mysql://localhost:3306/sonoo
    where jdbc is the API, mysql is the database, localhost is the server name
    on which mysql is running, we may also use IP address, 
    3306 is the port number and sonoo is the database name.
    We may use any database, in such case, we need to replace the sonoo
    with our database name. 
    */
    
    private void inicioSesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inicioSesionActionPerformed
        // codigo de boton "inicio sesion"
        
        /*
        Recuerda añadir el JAR de mysql connector a run/set project configuration/libraries/add JAR folder
        */
        
        Connection conexion = null;
        /*
        https://docs.oracle.com/javase/8/docs/api/java/sql/Connection.html
        A connection (session) with a specific database. SQL statements are 
        executed and results are returned within the context of a connection.

        A Connection object's database is able to provide information describing
        its tables, its supported SQL grammar, its stored procedures, 
        the capabilities of this connection, and so on. This information is 
        obtained with the getMetaData method. 
        */
        PreparedStatement sentencia_preparada = null;
        /*
        https://docs.oracle.com/javase/8/docs/api/java/sql/Statement.html
        https://docs.oracle.com/javase/7/docs/api/java/sql/PreparedStatement.html
        The object used for executing a static SQL statement and returning the 
        results it produces.

        A prepared statement is An object that represents a precompiled SQL statement.

        A SQL statement is precompiled and stored in a PreparedStatement object. 
        This object can then be used to efficiently execute this statement 
        multiple times. 
        
        By default, only one ResultSet object per Statement object can be open 
        at the same time. Therefore, if the reading of one ResultSet object is
        interleaved with the reading of another, each must have been generated 
        by different Statement objects. All execution methods in the Statement 
        interface implicitly close a current ResultSet object of the statement 
        if an open one exists.
        */
        ResultSet query = null;
        /*
        https://docs.oracle.com/javase/8/docs/api/java/sql/ResultSet.html
        A table of data representing a database result set, which is usually
        generated by executing a statement that queries the database.

        A ResultSet object maintains a cursor pointing to its current row of 
        data. Initially the cursor is positioned before the first row. The next 
        method moves the cursor to the next row, and because it returns false 
        when there are no more rows in the ResultSet object, it can be used in
        a while loop to iterate through the result set.

        A default ResultSet object is not updatable and has a cursor that moves 
        forward only. Thus, you can iterate through it only once and only from
        the first row to the last row. 
        */
        
        // TODO: ClassNotFoundException com.mysql.jdbc.Driver
        // https://stackoverflow.com/questions/2839321/connect-java-to-a-mysql-database
        // https://stackoverflow.com/questions/1585811/classnotfoundexception-com-mysql-jdbc-driver
        
        String nombre = nombre_txt.getText();
        String contra = contra_txt.getText();
        String ID = null;
        // preparedstatemens, sentencias precompiladas para evitar inyecciones SQL
        // https://software-security.sans.org/developer-how-to/fix-sql-injection-in-java-using-prepared-callable-statement
        // https://docs.oracle.com/javase/tutorial/jdbc/basics/prepared.html
        // https://www.javatpoint.com/PreparedStatement-interface
        String querySelectSQL = "SELECT nombre, contrasena, ID FROM usuario WHERE nombre = ? AND contrasena = ?;";
        try{
            
            //Class.forName("com.mysql.jdbc.Driver").newInstance();
            //https://stackoverflow.com/questions/52914454/how-to-solve-no-suitable-driver-found-for-jdbcmysql-localhost3306-sampledb
            //https://stackoverflow.com/questions/20267511/connecting-to-mysql-database-from-java-in-ide-netbeans
            conexion = DriverManager.getConnection("jdbc:mysql://localhost:3306/usuarios","root", "");
            sentencia_preparada = conexion.prepareStatement(querySelectSQL);
            // orden de sentencias/query desde el string de conexion (1 = nombre, 2= contraseña)
            // sets the String value to the given parameter index.
            sentencia_preparada.setString(1, this.nombre_txt.getText());
            sentencia_preparada.setString(2, this.contra_txt.getText());
            // executes the select query. It returns an instance of ResultSet.
            // https://stackoverflow.com/questions/24692296/how-to-use-prepared-statement-for-select-query-in-java
            /*
            when you pass in a string to executeQuery() that query is executed 
            literally and thus the ? is send to the database which then creates
            the error. By passing query string you are not execution the "cached"
            prepared statement for which you passed the values.
            */
            query = sentencia_preparada.executeQuery();
            if (query.next()){          
                // TODO: obtener fila (row) de cada parametro indicado
                ID = query.getString("ID");
                System.out.println("login exitoso");
                System.out.println("bienvenido, "+query.getString("nombre")+", ID: "+ID);
                System.out.println();
                JOptionPane.showMessageDialog(rootPane, "bienvenido, "+query.getString("nombre")+", ID: "+ID);
                // creacion de usuario
                usuario_registrado newUser = new usuario_registrado(nombre, ID, contra);
                // creacion de objeto menu
                // bandera para saber si el usuario esta accediendo desde el menu o desde el login
                // FALSE: registrar -> menu, TRUE: registrar -> login
                menu menu = new menu(newUser);
                menu.setVisible(true);
                dispose();
                
            }else{
                JOptionPane.showMessageDialog(rootPane, "usuario o contraseña inexistente y/o equivocado");
            }
                        
        }catch (SQLException ex){
            System.out.println("SQLException: " + ex.getMessage());
            System.out.println("SQLState: " + ex.getSQLState());
            System.out.println("VendorError: " + ex.getErrorCode());
            System.out.println();
        }
        catch (Exception e){
            JOptionPane.showMessageDialog(rootPane, e);
            System.out.println(e);
            System.out.println();
            e.printStackTrace();
        }
        finally{
            if (conexion != null){
                try{
                    query.close();
                    sentencia_preparada.close();
                    conexion.close();
                }catch (SQLException e){
                    e.printStackTrace();
                }
            }
        }
    }//GEN-LAST:event_inicioSesionActionPerformed

    private void registrarseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registrarseActionPerformed
        // TODO: crear menu para registrar usuario
        // boton para registrarse
        agregar_jframe modificar = new agregar_jframe(true);
        modificar.setVisible(true);
        dispose();
    }//GEN-LAST:event_registrarseActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(inicio_sesion_jframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(inicio_sesion_jframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(inicio_sesion_jframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(inicio_sesion_jframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new inicio_sesion_jframe().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField contra_txt;
    private javax.swing.JButton inicioSesion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField nombre_txt;
    private javax.swing.JButton registrarse;
    // End of variables declaration//GEN-END:variables
}
